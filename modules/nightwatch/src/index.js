const path = require('path')
const {
  getConfig,
  updateToolConfig,
  createFilesFromTemplates,
  getProjectRootDir,
  addAnyProjectFields,
} = require('@csssr/e2e-tools/utils')
const { updateVsCodeConfig } = require('@csssr/e2e-tools/vscode')
const packageName = require('../package.json').name
const { getCommands } = require('./commands')
const { upgradeRemoteBrowsersConfig } = require('./upgrades/upgrade-remote-browsers-config')

function createToolConfig() {
  return {
    browsers: {
      local_chrome: {
        default: true,
        type: 'webdriver',
        desiredCapabilities: {
          browserName: 'chrome',
          'goog:chromeOptions': {
            args: ['--window-size=1200,800'],
          },
        },
        globals: {
          skipScreenshotAssertions: true,
        },
      },
      remote_chrome: {
        remote: true,
        type: 'selenium',
        url: 'https://chrome.selenium.csssr.cloud',

        basicAuth: {
          credentialsId: 'chromedriver',
          username_env: 'CHROMEDRIVER_USERNAME',
          password_env: 'CHROMEDRIVER_PASSWORD',
        },

        desiredCapabilities: {
          browserName: 'chrome',
          'goog:chromeOptions': {
            w3c: false,
            args: ['--headless', '--no-sandbox', '--disable-gpu', '--window-size=1200,800'],
          },
        },
        globals: { skipScreenshotAssertions: false },
      },
    },
  }
}

const vscodeSettings = {
  frameworkName: 'Nightwatch',
  runCommand: 'nightwatch:run',
  tasks: [
    {
      type: 'shell',
      label: 'Nightwatch: Открыть HTML отчёт о последнем прогоне',
      command: 'open nightwatch/report/mochawesome.html',
      windows: {
        command: 'explorer nightwatch/report\\mochawesome.html',
      },
      problemMatcher: [],
      group: 'build',
    },
  ],
}

async function initScript(ctx) {
  await addAnyProjectFields(ctx, {
    templatesRoot: path.join(__dirname, '../templates'),
  })

  updateToolConfig(packageName, createToolConfig)
  updateVsCodeConfig(vscodeSettings)
}

function upgrade() {
  createFilesFromTemplates({
    templatesGlob: '**/*.autogenerated.hbs',
    templatesData: { config: getConfig() },
    templatesRoot: path.join(__dirname, '../templates'),
    destinationRoot: getProjectRootDir(),
  })

  updateVsCodeConfig(vscodeSettings)
  upgradeRemoteBrowsersConfig()
}

module.exports = {
  getCommands,
  initScript,
  upgrade,
}
