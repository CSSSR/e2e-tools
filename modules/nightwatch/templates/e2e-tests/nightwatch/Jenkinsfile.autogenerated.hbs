// Этот файл сгенерирован автоматически, не редактируйте его вручную
// Если вы хотите поменять дефолтный адрес стенда или адрес репозитория,
// сделайте это в e2e-tools.json и затем обновите этот файл командой upgrade

pipeline {
  agent any

  environment {
    scmVars = ""
  }

  parameters {
    string(defaultValue: '{{config.defaultLaunchUrl}}', description: 'Адрес стенда', name: 'launch_url', trim: true)
  }

  stages {
    stage('Clone') {
      steps {
        echo "Branch: ${GIT_BRANCH}"
        script {
          scmVars = checkout([
            $class: 'GitSCM',
            branches: [[name: GIT_BRANCH]],
            doGenerateSubmoduleConfigurations: false,
            extensions: [[$class: 'GitLFSPull']],
            userRemoteConfigs: [[url: '{{config.repositorySshAddress}}']]
          ])
        }
        echo "GIT_BRANCH: ${scmVars.GIT_BRANCH}"
        echo "GIT_COMMIT: ${scmVars.GIT_COMMIT}"
      }
    }

    stage('Install dependencies') {
      steps {
        script {
          sh """
            git clean -fdx .
            cd e2e-tests
            docker build -f nightwatch/Dockerfile --network host -t {{config.projectName}}/tests:${scmVars.GIT_COMMIT} .
          """
        }
      }
    }

    stage('Run tests') {
      steps {
        script {
          withCredentials([
            usernamePassword(credentialsId: 'testrail', usernameVariable: 'TESTRAIL_USERNAME', passwordVariable: 'TESTRAIL_API_TOKEN'),
            usernamePassword(credentialsId: 'chromedriver', usernameVariable: 'CHROMEDRIVER_USERNAME', passwordVariable: 'CHROMEDRIVER_PASSWORD')
          ]) {
            sh """
              docker run --network host \
                -e LAUNCH_URL=${params.launch_url} \
                -e CHROMEDRIVER_USERNAME \
                -e CHROMEDRIVER_PASSWORD \
                -e TESTRAIL_USERNAME \
                -e TESTRAIL_API_TOKEN \
                --cidfile "$BUILD_TAG-tests.cid" \
                {{config.projectName}}/tests:${scmVars.GIT_COMMIT}
            """
          }
        }
      }
    }
  }

  post {
    always {
      sh """
        mkdir -p artifacts/failure-screenshots
        mkdir -p artifacts/screenshots
        docker cp `cat "$BUILD_TAG-tests.cid"`:/usr/src/app/nightwatch/jenkins-report.xml artifacts/
        docker cp `cat "$BUILD_TAG-tests.cid"`:/usr/src/app/nightwatch/failure-screenshots artifacts/
        docker cp `cat "$BUILD_TAG-tests.cid"`:/usr/src/app/nightwatch/screenshots artifacts/
        docker rm `cat "$BUILD_TAG-tests.cid"`
        rm "$BUILD_TAG-tests.cid"
      """

      archiveArtifacts artifacts: 'artifacts/failure-screenshots/*.png', allowEmptyArchive: true
      archiveArtifacts artifacts: 'artifacts/screenshots/diff/**/*.png', allowEmptyArchive: true
      junit 'artifacts/jenkins-report.xml'
    }
  }
}
