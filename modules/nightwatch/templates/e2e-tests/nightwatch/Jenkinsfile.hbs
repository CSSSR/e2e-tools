pipeline {
  agent any

  environment {
    scmVars = ""
  }

  parameters {
    string(defaultValue: '{{launchUrl}}', description: 'Адрес стенда', name: 'launch_url', trim: true)
  }

  stages {
    stage('Clone') {
      steps {
        echo "Branch: ${GIT_BRANCH}"
        script {
          scmVars = checkout([
            $class: 'GitSCM',
            branches: [[name: GIT_BRANCH]],
            doGenerateSubmoduleConfigurations: false,
            extensions: [[$class: 'GitLFSPull']],
            userRemoteConfigs: [[url: '{{repoSshAddress}}']]
          ])
        }
        echo "GIT_BRANCH: ${scmVars.GIT_BRANCH}"
        echo "GIT_COMMIT: ${scmVars.GIT_COMMIT}"
      }
    }

    stage('Install dependencies') {
      steps {
        script {
          sh """
            cd e2e-tests
            docker build -f nightwatch/Dockerfile --network host -t {{projectName}}/tests:${scmVars.GIT_COMMIT} .
          """
        }
      }
    }

    stage('Run tests') {
      steps {
        script {
          withCredentials([
            usernamePassword(credentialsId: 'testrail', usernameVariable: 'TESTRAIL_USERNAME', passwordVariable: 'TESTRAIL_API_TOKEN'),
            usernamePassword(credentialsId: 'chromedriver', usernameVariable: 'CHROMEDRIVER_USERNAME', passwordVariable: 'CHROMEDRIVER_PASSWORD')
          ]) {
            sh """
              docker run --network host \
                -e LAUNCH_URL=${params.launch_url} \
                -e CHROMEDRIVER_USERNAME \
                -e CHROMEDRIVER_PASSWORD \
                -e TESTRAIL_USERNAME \
                -e TESTRAIL_API_TOKEN \
                --name {{projectName}}-test-run-${scmVars.GIT_COMMIT} \
                {{projectName}}/tests:${scmVars.GIT_COMMIT}
            """
          }
        }
      }
    }
  }

  post {
    always {
      sh "docker cp {{projectName}}-test-run-${scmVars.GIT_COMMIT}:/usr/src/app/nightwatch/jenkins-report.xml ."
      junit 'e2e-tests/nightwatch/jenkins-report.xml'
      sh "docker rm {{projectName}}-test-run-${scmVars.GIT_COMMIT}"
    }
  }
}
